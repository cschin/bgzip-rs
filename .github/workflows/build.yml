name: Build

on:
  push:
    branches: [master, test-actions]
  pull_request:
    branches: [master]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            test: true
            cross: false
          - os: windows-latest
            target: i686-pc-windows-msvc
            test: true
            cross: false
          - os: macos-latest
            target: x86_64-apple-darwin
            test: true
            cross: false
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            test: true
            cross: false
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            test: true
            cross: false
    steps:
      - name: Git config
        if: ${{ matrix.config.os == 'windows-latest' }}
        run: git config --global core.autocrlf input
      - uses: actions/checkout@v3
      # - name: Install LLVM Windows
      #   if: ${{ matrix.config.os == 'windows-latest' }}
      #   run: choco install llvm
      # - name: Setup LLVM path
      #   if: ${{ matrix.config.os == 'windows-latest' }}
      #   run: |
      #     echo "LIBCLANG_PATH=C:\Program Files\LLVM\bin" > $env:GITHUB_ENV
      # - name: Install LLVM Ubuntu
      #   if: ${{ matrix.config.os == 'ubuntu-latest' }}
      #   run: sudo apt-get install libclang-dev llvm-dev
      - name: Install musl tools
        if: ${{ matrix.config.target == 'x86_64-unknown-linux-musl' }}
        run: sudo apt-get install musl-tools musl-dev
      - name: Checkout submodule
        run: git submodule update --init --recursive
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.config.target }}
          override: true
          components: rustfmt, clippy
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Test
        if: ${{ matrix.config.test }}
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --target ${{ matrix.config.target }}
      - name: Test without rayon
        if: ${{ matrix.config.test }}
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-default-features --features rust_backend --release --target ${{ matrix.config.target }}
      - name: Test with zlib
        if: ${{ matrix.config.test }}
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-default-features --features zlib --release --target ${{ matrix.config.target }}
      - name: Test with zlib-ng and rayon
        if: ${{ matrix.config.test }}
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-default-features --features rayon,zlib-ng --release --target ${{ matrix.config.target }}
      - name: Test with libdeflate
        if: ${{ matrix.config.test }}
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-default-features --features libdeflater --release --target ${{ matrix.config.target }}
      - name: Test with libdeflate and rayon
        if: ${{ matrix.config.test }}
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-default-features --features rayon,libdeflater --release --target ${{ matrix.config.target }}
